# Generated by Django 4.2.7 on 2025-09-28 12:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category_type', models.CharField(choices=[('announcement', 'School Announcements'), ('achievement', 'Student Achievements'), ('event', 'Upcoming Events'), ('academic', 'Academic News'), ('sports', 'Sports News'), ('community', 'Community News'), ('administration', 'Administration Updates'), ('general', 'General News')], default='general', max_length=20)),
                ('color', models.CharField(default='#800000', help_text='Hex color code for category', max_length=7)),
                ('icon', models.CharField(default='fas fa-newspaper', help_text='Font Awesome icon class', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'News Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NewsSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('articles_per_page', models.PositiveIntegerField(default=10)),
                ('allow_comments', models.BooleanField(default=True)),
                ('moderate_comments', models.BooleanField(default=True)),
                ('show_author_info', models.BooleanField(default=True)),
                ('enable_social_sharing', models.BooleanField(default=True)),
                ('newsletter_signup_enabled', models.BooleanField(default=True)),
                ('site_name', models.CharField(default="St. Mary's Nyakhobi School News", max_length=100)),
                ('default_meta_description', models.CharField(default="Latest news, announcements, and updates from St. Mary's Nyakhobi School", max_length=160)),
            ],
            options={
                'verbose_name': 'News Settings',
                'verbose_name_plural': 'News Settings',
            },
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('subtitle', models.CharField(blank=True, help_text='Optional subtitle or summary', max_length=300)),
                ('content', models.TextField(help_text='Article content in HTML format')),
                ('excerpt', models.TextField(blank=True, help_text='Short description for previews', max_length=500)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('featured_image', models.ImageField(blank=True, upload_to='news/images/')),
                ('image_caption', models.CharField(blank=True, max_length=200)),
                ('is_published', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False, help_text='Show in featured news section')),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('normal', 'Normal Priority'), ('high', 'High Priority'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_description', models.CharField(blank=True, help_text='SEO meta description', max_length=160)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='news.newscategory')),
            ],
            options={
                'ordering': ['-published_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=False)),
                ('is_spam', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='news.newsarticle')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='news.newsarticle')),
            ],
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('volume', models.PositiveIntegerField(help_text='Newsletter volume/year')),
                ('issue', models.PositiveIntegerField(help_text='Issue number')),
                ('publication_date', models.DateField()),
                ('pdf_file', models.FileField(blank=True, upload_to='newsletters/pdf/')),
                ('cover_image', models.ImageField(blank=True, upload_to='newsletters/covers/')),
                ('is_published', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-publication_date'],
                'unique_together': {('volume', 'issue')},
            },
        ),
        migrations.AddIndex(
            model_name='newsarticle',
            index=models.Index(fields=['slug'], name='news_newsar_slug_342666_idx'),
        ),
        migrations.AddIndex(
            model_name='newsarticle',
            index=models.Index(fields=['is_published', '-published_date'], name='news_newsar_is_publ_155e4f_idx'),
        ),
        migrations.AddIndex(
            model_name='newsarticle',
            index=models.Index(fields=['category', '-published_date'], name='news_newsar_categor_6ac0f0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='articlelike',
            unique_together={('article', 'ip_address')},
        ),
    ]
