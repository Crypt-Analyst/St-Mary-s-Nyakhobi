# Generated by Django 4.2.7 on 2025-09-28 13:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., 2024-2025', max_length=50, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Academic Year',
                'verbose_name_plural': 'Academic Years',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('PP1', 'Pre-Primary 1'), ('PP2', 'Pre-Primary 2'), ('Grade1', 'Grade 1'), ('Grade2', 'Grade 2'), ('Grade3', 'Grade 3'), ('Grade4', 'Grade 4'), ('Grade5', 'Grade 5'), ('Grade6', 'Grade 6'), ('Grade7', 'Grade 7'), ('Grade8', 'Grade 8'), ('Form1', 'Form 1'), ('Form2', 'Form 2'), ('Form3', 'Form 3'), ('Form4', 'Form 4')], max_length=20, unique=True)),
                ('display_name', models.CharField(max_length=50)),
                ('level', models.IntegerField(help_text='Numeric level for ordering (1-14)')),
                ('capacity', models.PositiveIntegerField(default=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.academicyear')),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='ClassSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lessons_per_week', models.PositiveIntegerField(default=1)),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_subjects', to='portal.class')),
            ],
            options={
                'verbose_name': 'Class Subject',
                'verbose_name_plural': 'Class Subjects',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(choices=[('father', 'Father'), ('mother', 'Mother'), ('guardian', 'Guardian'), ('grandfather', 'Grandfather'), ('grandmother', 'Grandmother'), ('uncle', 'Uncle'), ('aunt', 'Aunt'), ('other', 'Other')], max_length=20)),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('workplace', models.CharField(blank=True, max_length=200)),
                ('work_phone', models.CharField(blank=True, max_length=20)),
                ('national_id', models.CharField(blank=True, max_length=20)),
                ('is_primary_contact', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['profile__user__first_name', 'profile__user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='PortalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_year_start_month', models.PositiveIntegerField(default=1, help_text='Month when school year starts (1-12)')),
                ('grading_scale', models.JSONField(default=dict, help_text='Grading scale configuration')),
                ('attendance_required', models.BooleanField(default=True)),
                ('parent_access_enabled', models.BooleanField(default=True)),
                ('assignment_submission_enabled', models.BooleanField(default=True)),
                ('communication_enabled', models.BooleanField(default=True)),
                ('report_generation_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Portal Settings',
                'verbose_name_plural': 'Portal Settings',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_core', models.BooleanField(default=True, help_text='Is this a core/compulsory subject?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('classes', models.ManyToManyField(through='portal.ClassSubject', to='portal.class')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('admin', 'Administrator'), ('teacher', 'Teacher'), ('student', 'Student'), ('parent', 'Parent')], max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('emergency_phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_number', models.IntegerField(choices=[(1, 'Term 1'), (2, 'Term 2'), (3, 'Term 3')])),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.academicyear')),
            ],
            options={
                'ordering': ['academic_year', 'term_number'],
                'unique_together': {('academic_year', 'term_number')},
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('employment_status', models.CharField(choices=[('permanent', 'Permanent'), ('contract', 'Contract'), ('temporary', 'Temporary'), ('intern', 'Intern')], default='permanent', max_length=20)),
                ('hire_date', models.DateField()),
                ('qualifications', models.TextField(help_text='Educational qualifications and certifications')),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='portal.userprofile')),
                ('subjects', models.ManyToManyField(blank=True, to='portal.subject')),
            ],
            options={
                'ordering': ['profile__user__first_name', 'profile__user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_number', models.CharField(max_length=20, unique=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('admission_date', models.DateField()),
                ('medical_conditions', models.TextField(blank=True, help_text='Any medical conditions or allergies')),
                ('previous_school', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('graduation_year', models.IntegerField(blank=True, null=True)),
                ('current_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='portal.class')),
                ('parent_guardian', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.parent')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='portal.userprofile')),
            ],
            options={
                'ordering': ['admission_number'],
            },
        ),
        migrations.AddField(
            model_name='parent',
            name='children',
            field=models.ManyToManyField(blank=True, related_name='parents', to='portal.student'),
        ),
        migrations.AddField(
            model_name='parent',
            name='profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='portal.userprofile'),
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_type', models.CharField(choices=[('assignment', 'Assignment'), ('test', 'Test'), ('exam', 'Exam'), ('quiz', 'Quiz'), ('project', 'Project'), ('participation', 'Class Participation')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('marks_obtained', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_marks', models.DecimalField(decimal_places=2, default=100, max_digits=5)),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, help_text='Weight in final grade calculation', max_digits=3)),
                ('comments', models.TextField(blank=True)),
                ('date_recorded', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='portal.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.teacher')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.term')),
            ],
            options={
                'ordering': ['-date_recorded'],
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('announcement', 'General Announcement'), ('assignment', 'Assignment Update'), ('grade', 'Grade Notification'), ('attendance', 'Attendance Alert'), ('fee', 'Fee Reminder'), ('event', 'Event Notification'), ('disciplinary', 'Disciplinary Matter'), ('general', 'General Message')], default='general', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='communications/')),
                ('is_broadcast', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_by', models.ManyToManyField(blank=True, related_name='read_communications', to=settings.AUTH_USER_MODEL)),
                ('recipients', models.ManyToManyField(related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='classsubject',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_classes', to='portal.subject'),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.teacher'),
        ),
        migrations.AddField(
            model_name='class',
            name='class_teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.teacher'),
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('assignment_type', models.CharField(choices=[('homework', 'Homework'), ('project', 'Project'), ('quiz', 'Quiz'), ('test', 'Test'), ('exam', 'Exam'), ('practical', 'Practical')], default='homework', max_length=20)),
                ('due_date', models.DateTimeField()),
                ('max_marks', models.PositiveIntegerField(default=100)),
                ('instructions', models.TextField(blank=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='assignments/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('closed', 'Closed')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='portal.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.teacher')),
            ],
            options={
                'ordering': ['-due_date'],
            },
        ),
        migrations.CreateModel(
            name='ProgressReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('class_position', models.PositiveIntegerField(blank=True, null=True)),
                ('total_students', models.PositiveIntegerField(blank=True, null=True)),
                ('conduct_grade', models.CharField(blank=True, max_length=2)),
                ('effort_grade', models.CharField(blank=True, max_length=2)),
                ('teacher_comments', models.TextField(blank=True)),
                ('principal_comments', models.TextField(blank=True)),
                ('parent_comments', models.TextField(blank=True)),
                ('next_term_begins', models.DateField(blank=True, null=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('class_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.teacher')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_reports', to='portal.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.term')),
            ],
            options={
                'ordering': ['-term__start_date'],
                'unique_together': {('student', 'term')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='classsubject',
            unique_together={('class_obj', 'subject')},
        ),
        migrations.AlterUniqueTogether(
            name='class',
            unique_together={('name', 'academic_year')},
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], default='present', max_length=20)),
                ('time_in', models.TimeField(blank=True, null=True)),
                ('time_out', models.TimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('marked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.teacher')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='portal.student')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_text', models.TextField(blank=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='submissions/')),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('marks_obtained', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('teacher_feedback', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('graded', 'Graded'), ('returned', 'Returned')], default='draft', max_length=20)),
                ('is_late', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='portal.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.student')),
            ],
            options={
                'ordering': ['-submitted_at'],
                'unique_together': {('assignment', 'student')},
            },
        ),
    ]
