# Generated by Django 4.2.7 on 2025-10-05 12:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('admin_portal', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Sciences, Languages, Mathematics', max_length=100)),
                ('description', models.TextField()),
                ('head_of_department', models.CharField(blank=True, max_length=200)),
                ('subjects_offered', models.TextField(help_text='List all subjects in this department')),
                ('department_image', models.ImageField(blank=True, null=True, upload_to='academics/')),
                ('display_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Academic Department',
                'verbose_name_plural': 'Academic Departments',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HomePageBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=300)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='banners/')),
                ('button_text', models.CharField(blank=True, help_text="e.g., 'Learn More', 'Apply Now'", max_length=50)),
                ('button_link', models.CharField(blank=True, help_text='URL or page path', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0, help_text='Lower numbers appear first')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Homepage Banner',
                'verbose_name_plural': 'Homepage Banners',
                'ordering': ['display_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Newsletter Subscription',
                'verbose_name_plural': 'Newsletter Subscriptions',
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='ParentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('fees', 'Fees & Payments'), ('uniform', 'Uniform Requirements'), ('policy', 'School Policies'), ('calendar', 'Academic Calendar'), ('transport', 'Transport Information'), ('general', 'General Information')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('attachment', models.FileField(blank=True, help_text='PDF or document file', null=True, upload_to='parent_info/')),
                ('is_published', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Parent Information',
                'verbose_name_plural': 'Parent Information',
                'ordering': ['category', 'display_order'],
            },
        ),
        migrations.CreateModel(
            name='SchoolValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='e.g., Integrity, Excellence, Respect', max_length=100)),
                ('description', models.TextField()),
                ('icon_class', models.CharField(blank=True, help_text="Font Awesome icon class, e.g., 'fas fa-star'", max_length=50)),
                ('display_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'School Value',
                'verbose_name_plural': 'School Values',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='newsletters/')),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_newsletters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Newsletter',
                'verbose_name_plural': 'Newsletters',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CurriculumInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('form1', 'Form 1'), ('form2', 'Form 2'), ('form3', 'Form 3'), ('form4', 'Form 4')], max_length=20, unique=True)),
                ('description', models.TextField(help_text='Overview of this level')),
                ('core_subjects', models.TextField(help_text='List core/compulsory subjects')),
                ('elective_subjects', models.TextField(blank=True, help_text='List optional subjects')),
                ('curriculum_file', models.FileField(blank=True, null=True, upload_to='curriculum/')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Curriculum Information',
                'verbose_name_plural': 'Curriculum Information',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='AdmissionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info_type', models.CharField(choices=[('requirements', 'Admission Requirements'), ('process', 'Application Process'), ('fees', 'Fee Structure'), ('documents', 'Required Documents'), ('deadlines', 'Important Dates')], max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(help_text='Detailed information')),
                ('application_form', models.FileField(blank=True, null=True, upload_to='admissions/')),
                ('is_published', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admission Information',
                'verbose_name_plural': 'Admission Information',
            },
        ),
        migrations.CreateModel(
            name='AdminActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Created'), ('update', 'Updated'), ('delete', 'Deleted'), ('login', 'Logged In'), ('logout', 'Logged Out')], max_length=20)),
                ('content_type', models.CharField(help_text='Type of content modified', max_length=100)),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('object_repr', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'ordering': ['-timestamp'],
            },
        ),
    ]
